install.packages(c("dplyr", "ggplot2", "caret", "glmnet", "corrplot"))
library(dplyr)
library(ggplot2)
library(caret)
library(glmnet)
library(corrplot)

data <- read.csv("C:\\Users\\ASUS\\OneDrive\\Dokumen\\R programming\\insurance (1).csv")
head(data)
str(data)
summary(data)

sum(is.na(data))  # Should be 0 ideally
data$children<-as.numeric(data$children)
data$sex <- as.factor(data$sex)
data$smoker <- as.factor(data$smoker)
data$region <- as.factor(data$region)

ggplot(data, aes(x = charges)) +
  geom_histogram(fill = "skyblue", bins = 30, color = "black") +
  ggtitle("Distribution of Insurance Charges")

ggplot(data, aes(x = smoker, y = charges, fill = smoker)) +
  geom_boxplot() +
  ggtitle("Charges by Smoking Status")

numeric_vars <- data %>% select_if(is.numeric)
corrplot(cor(numeric_vars), method = "circle")

ggplot(data, aes(x = age, y = charges)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", col = "red") +
  ggtitle("Age vs Charges")


set.seed(123)
split <- createDataPartition(data$charges, p = 0.8, list = FALSE)
train_data <- data[split, ]
test_data <- data[-split, ]

linear_model <- lm(charges ~ ., data = train_data)
summary(linear_model)

pred_linear <- predict(linear_model, test_data)

mse_linear <- mean((test_data$charges - pred_linear)^2)
rmse_linear <- sqrt(mse_linear)
cat("Linear Regression RMSE:", rmse_linear, "\n")

X_train <- model.matrix(charges ~ . , train_data)[, -1]
y_train <- train_data$charges
X_test <- model.matrix(charges ~ . , test_data)[, -1]
y_test <- test_data$charges

lasso_model <- cv.glmnet(X_train, y_train, alpha = 1)
plot(lasso_model)

pred_lasso <- predict(lasso_model, s = lasso_model$lambda.min, newx = X_test)

mse_lasso <- mean((y_test - pred_lasso)^2)
rmse_lasso <- sqrt(mse_lasso)
cat("Lasso Regression RMSE:", rmse_lasso, "\n")

ridge_model <- cv.glmnet(X_train, y_train, alpha = 0)
plot(ridge_model)

pred_ridge <- predict(ridge_model, s = ridge_model$lambda.min, newx = X_test)

mse_ridge <- mean((y_test - pred_ridge)^2)
rmse_ridge <- sqrt(mse_ridge)
cat("Ridge Regression RMSE:", rmse_ridge, "\n")

results <- data.frame(
  Model = c("Linear Regression", "Lasso Regression", "Ridge Regression"),
  RMSE = c(rmse_linear, rmse_lasso, rmse_ridge)
)
print(results)

new_customer <- data.frame(
  age = 40,
  sex = factor("male", levels = levels(data$sex)),
  bmi = 30,
  children = 2,
  smoker = factor("no", levels = levels(data$smoker)),
  region = factor("southeast", levels = levels(data$region))
)

predicted_premium <- predict(linear_model, new_customer)
cat("Predicted Insurance Premium for New Customer:", predicted_premium, "\n")
str(train_data)
str(new_customer)

predictions <- predict(linear_model, newdata = test_data)

rmse <- sqrt(mean((predictions - test_data$charges)^2))
cat("RMSE:", rmse, "\n")

summary(linear_model)$r.squared

predictions <- predict(linear_model, newdata = test_data)

rmse <- sqrt(mean((predictions - test_data$charges)^2))
cat("RMSE:", rmse, "\n")

r2 <- summary(linear_model)$r.squared
cat("R-squared:", r2, "\n")

adj_r2 <- summary(linear_model)$adj.r.squared
cat("Adjusted R-squared:", adj_r2, "\n")

predictions <- predict(linear_model, newdata = test_data)

plot_data <- data.frame(
  Actual = test_data$charges,
  Predicted = predictions
)

library(ggplot2)

ggplot(plot_data, aes(x = Actual, y = Predicted)) +
  geom_point(color = "blue", alpha = 0.6) +   # scatter points
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed", size = 1.2) +  # ideal line
  labs(title = "Actual vs Predicted Insurance Charges",
       x = "Actual Charges",
       y = "Predicted Charges") +
  theme_minimal()

r2 <- summary(linear_model)$r.squared

ggplot(plot_data, aes(x = Actual, y = Predicted)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed", size = 1.2) +
  annotate("text", x = max(plot_data$Actual)*0.7, y = max(plot_data$Actual)*0.3,
           label = paste("RÂ² =", round(r2, 3)),
           size = 5, color = "black") +
  labs(title = "Actual vs Predicted Insurance Charges",
       x = "Actual Charges",
       y = "Predicted Charges") +
  theme_minimal()

install.packages("randomForest")
library(randomForest)

set.seed(123)
rf_model <- randomForest(charges ~ ., data = train_data, ntree = 500, mtry = 3, importance = TRUE)
print(rf_model)

rf_predictions <- predict(rf_model, newdata = test_data)

rf_rmse <- sqrt(mean((rf_predictions - test_data$charges)^2))
cat("Random Forest RMSE:", rf_rmse, "\n")

rf_r2 <- 1 - sum((rf_predictions - test_data$charges)^2) / sum((mean(train_data$charges) - test_data$charges)^2)
cat("Random Forest R-squared:", rf_r2, "\n")

varImpPlot(rf_model)

new_customer <- data.frame(
  age = 35,
  sex = factor("female", levels = levels(train_data$sex)),
  bmi = 35,
  children = 2,
  smoker = factor("yes", levels = levels(train_data$smoker)),
  region = factor("southeast", levels = levels(train_data$region))
)

predicted_premium_rf <- predict(rf_model, new_customer)
cat("Predicted Premium using Random Forest:", predicted_premium_rf, "\n")


lin_predictions <- predict(linear_model, newdata = test_data)
rf_predictions <- predict(rf_model, newdata = test_data)

comparison_df <- data.frame(
  Actual = test_data$charges,
  Linear_Regression = lin_predictions,
  Random_Forest = rf_predictions
)

rmse_lin <- sqrt(mean((lin_predictions - test_data$charges)^2))
rmse_rf <- sqrt(mean((rf_predictions - test_data$charges)^2))
cat("Linear Regression RMSE:", rmse_lin, "\n")
cat("Random Forest RMSE:", rmse_rf, "\n")

library(ggplot2)
library(reshape2)

comparison_long <- melt(comparison_df, id.vars = "Actual")

ggplot(comparison_long, aes(x = Actual, y = value, color = variable)) +
  geom_point(alpha = 0.6) +
  geom_abline(intercept = 0, slope = 1, color = "black", linetype = "dashed") +
  labs(title = "Comparison of Actual vs Predicted Charges",
       x = "Actual Charges",
       y = "Predicted Charges",
       color = "Model") +
  theme_minimal()
